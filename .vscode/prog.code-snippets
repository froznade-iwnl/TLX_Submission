{
	// Place your C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		// "scope": "javascript,typescript",
		"prefix": "cp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;\n",

			"#define mp make_pair",
			"#define pb push_back",
			"#define int long long",
			"#define pii pair<int, int>",
			"#define fi first",
			"#define se second",
			"#define forp(i, x, y) for(int i = x; i < y; i++)",
			"#define forn(i, x, y) for(int i = x; i >= y; i--)",
			"#define all(v) v.begin(), v.end()\n",

			"signed main(){",

				"\tios_base::sync_with_stdio(false);",
				"\tcin.tie(0);",
				"\tcout.tie(0);\n",
				"\t$1\n",
				
				"\treturn 0;",
			"}\n",

			"/* stuff you should look for",
				"\t* IF IT WORKS, IT WORKS",
				"\t* int overflow, array bounds",
				"\t* special cases (n=1?)",
				"\t* do smth instead of nothing and stay organized",
				"\t* WRITE STUFF DOWN",
				"\t* DON'T GET STUCK ON ONE APPROACH",
			"*/"
		],
		"description": "Log output to console"
	}
}